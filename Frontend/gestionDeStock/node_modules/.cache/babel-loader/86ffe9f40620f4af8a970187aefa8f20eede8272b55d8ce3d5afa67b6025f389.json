{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\Desktop\\\\GStock\\\\Frontend\\\\gestionDeStock\\\\src\\\\components\\\\UpdateUser.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UpdateUser() {\n  _s();\n  const {\n    id\n  } = useParams(); // Récupérer l'ID de l'utilisateur depuis les paramètres de l'URL\n  const history = useHistory(); // Utiliser useHistory pour rediriger après la mise à jour de l'utilisateur\n\n  const [name, setName] = useState(''); // Utiliser des états pour stocker les données de l'utilisateur\n  const [email, setEmail] = useState('');\n  useEffect(() => {\n    getUser(); // Appel de la fonction pour récupérer les données de l'utilisateur lors du chargement du composant\n  }, []);\n  const getUser = async () => {\n    try {\n      const res = await fetch(`http://localhost:3001/users/${id}`, {\n        // Endpoint pour récupérer les données de l'utilisateur par ID\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      const data = await res.json();\n      if (res.status === 200) {\n        console.log(\"User data retrieved.\");\n        setName(data.name); // Mettre à jour les états avec les données de l'utilisateur\n        setEmail(data.email);\n      } else {\n        console.log(\"User not found.\");\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  const updateUser = async () => {\n    try {\n      const res = await fetch(`http://localhost:3001/users/${id}`, {\n        // Endpoint pour mettre à jour les données de l'utilisateur par ID\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          name,\n          email\n        }) // Envoyer les nouvelles données de l'utilisateur dans le corps de la requête\n      });\n\n      if (res.status === 201) {\n        console.log(\"User updated successfully.\");\n        history.push(\"/userlist\"); // Rediriger vers la liste des utilisateurs après la mise à jour réussie\n      } else {\n        console.log(\"Failed to update user.\");\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid p-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Update User\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        className: \"form-label\",\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        id: \"name\",\n        value: name,\n        onChange: e => setName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        className: \"form-label\",\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        className: \"form-control\",\n        id: \"email\",\n        value: email,\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: updateUser,\n      children: \"Update\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n}\n_s(UpdateUser, \"py8E3bqLlcjIh0nFIS6Iey8Kem0=\", false, function () {\n  return [useParams, useHistory];\n});\n_c = UpdateUser;\nvar _c;\n$RefreshReg$(_c, \"UpdateUser\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useHistory","jsxDEV","_jsxDEV","UpdateUser","_s","id","history","name","setName","email","setEmail","getUser","res","fetch","method","headers","data","json","status","console","log","err","updateUser","body","JSON","stringify","push","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/lenovo/Desktop/GStock/Frontend/gestionDeStock/src/components/UpdateUser.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\n\r\nexport default function UpdateUser() {\r\n    const { id } = useParams(); // Récupérer l'ID de l'utilisateur depuis les paramètres de l'URL\r\n    const history = useHistory(); // Utiliser useHistory pour rediriger après la mise à jour de l'utilisateur\r\n\r\n    const [name, setName] = useState(''); // Utiliser des états pour stocker les données de l'utilisateur\r\n    const [email, setEmail] = useState('');\r\n\r\n    useEffect(() => {\r\n        getUser(); // Appel de la fonction pour récupérer les données de l'utilisateur lors du chargement du composant\r\n    }, []);\r\n\r\n    const getUser = async () => {\r\n        try {\r\n            const res = await fetch(`http://localhost:3001/users/${id}`, { // Endpoint pour récupérer les données de l'utilisateur par ID\r\n                method: \"GET\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                }\r\n            });\r\n\r\n            const data = await res.json();\r\n\r\n            if (res.status === 200) {\r\n                console.log(\"User data retrieved.\");\r\n                setName(data.name); // Mettre à jour les états avec les données de l'utilisateur\r\n                setEmail(data.email);\r\n            } else {\r\n                console.log(\"User not found.\");\r\n            }\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    const updateUser = async () => {\r\n        try {\r\n            const res = await fetch(`http://localhost:3001/users/${id}`, { // Endpoint pour mettre à jour les données de l'utilisateur par ID\r\n                method: \"PUT\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify({ name, email }) // Envoyer les nouvelles données de l'utilisateur dans le corps de la requête\r\n            });\r\n\r\n            if (res.status === 201) {\r\n                console.log(\"User updated successfully.\");\r\n                history.push(\"/userlist\"); // Rediriger vers la liste des utilisateurs après la mise à jour réussie\r\n            } else {\r\n                console.log(\"Failed to update user.\");\r\n            }\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='container-fluid p-5'>\r\n            <h1>Update User</h1>\r\n            <div className='mb-3'>\r\n                <label htmlFor=\"name\" className='form-label'>Name</label>\r\n                <input type=\"text\" className='form-control' id=\"name\" value={name} onChange={(e) => setName(e.target.value)} />\r\n            </div>\r\n            <div className='mb-3'>\r\n                <label htmlFor=\"email\" className='form-label'>Email</label>\r\n                <input type=\"email\" className='form-control' id=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} />\r\n            </div>\r\n            <button className='btn btn-primary' onClick={updateUser}>Update</button>\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}