{"ast":null,"code":"const express = require(\"express\");\nconst mongoose = require(\"mongoose\");\nconst cors = require(\"cors\");\nconst UserModel = require(\"./Models/user\");\nconst app = express();\napp.use(express.json());\napp.use(cors());\nmongoose.connect(\"mongodb://127.0.0.1:27017/users\");\napp.post(\"/login\", (req, res) => {\n  const {\n    email,\n    password\n  } = req.body;\n  UserModel.findOne({\n    email: email\n  }).then(user => {\n    if (user) {\n      if (user.password === password) {\n        res.json(\"Success\");\n      } else {\n        res.json(\"The password is incorrect\");\n      }\n    } else {\n      res.json(\"No record existed\");\n    }\n  });\n});\napp.post(\"/register\", (req, res) => {\n  UserModel.create(req.body).then(users => res.json(users)).catch(err => res.json(err));\n});\napp.listen(3001, () => {\n  console.log(\"server is running\");\n});","map":{"version":3,"names":["express","require","mongoose","cors","UserModel","app","use","json","connect","post","req","res","email","password","body","findOne","then","user","create","users","catch","err","listen","console","log"],"sources":["C:/Users/lenovo/Desktop/GStock/Frontend/gestionDeStock/src/components/Signup.js"],"sourcesContent":["const express = require(\"express\")\r\nconst mongoose = require(\"mongoose\")\r\nconst cors = require(\"cors\")\r\n\r\nconst UserModel = require(\"./Models/user\")\r\n\r\nconst app = express()\r\napp.use(express.json())\r\napp.use(cors())\r\n\r\nmongoose.connect(\"mongodb://127.0.0.1:27017/users\");\r\n\r\napp.post(\"/login\", (req, res) => {\r\n    const {email, password} = req.body;\r\n   UserModel.findOne({email : email})\r\n    .then(user => {\r\n        if(user) {\r\n            if(user.password === password){\r\n                res.json(\"Success\")\r\n            }else{\r\n                res.json(\"The password is incorrect\")\r\n            }\r\n        }else{\r\n            res.json(\"No record existed\")\r\n        }\r\n    })\r\n})\r\n\r\napp.post(\"/register\", (req, res) => {\r\n    UserModel.create(req.body)\r\n    .then(users => res.json(users))\r\n    .catch(err => res.json(err))\r\n})\r\n\r\n\r\napp.listen(3001, () => {\r\n    console.log(\"server is running\")\r\n})"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAS,CAAC;AAClC,MAAMC,QAAQ,GAAGD,OAAO,CAAC,UAAU,CAAC;AACpC,MAAME,IAAI,GAAGF,OAAO,CAAC,MAAM,CAAC;AAE5B,MAAMG,SAAS,GAAGH,OAAO,CAAC,eAAe,CAAC;AAE1C,MAAMI,GAAG,GAAGL,OAAO,CAAC,CAAC;AACrBK,GAAG,CAACC,GAAG,CAACN,OAAO,CAACO,IAAI,CAAC,CAAC,CAAC;AACvBF,GAAG,CAACC,GAAG,CAACH,IAAI,CAAC,CAAC,CAAC;AAEfD,QAAQ,CAACM,OAAO,CAAC,iCAAiC,CAAC;AAEnDH,GAAG,CAACI,IAAI,CAAC,QAAQ,EAAE,CAACC,GAAG,EAAEC,GAAG,KAAK;EAC7B,MAAM;IAACC,KAAK;IAAEC;EAAQ,CAAC,GAAGH,GAAG,CAACI,IAAI;EACnCV,SAAS,CAACW,OAAO,CAAC;IAACH,KAAK,EAAGA;EAAK,CAAC,CAAC,CAChCI,IAAI,CAACC,IAAI,IAAI;IACV,IAAGA,IAAI,EAAE;MACL,IAAGA,IAAI,CAACJ,QAAQ,KAAKA,QAAQ,EAAC;QAC1BF,GAAG,CAACJ,IAAI,CAAC,SAAS,CAAC;MACvB,CAAC,MAAI;QACDI,GAAG,CAACJ,IAAI,CAAC,2BAA2B,CAAC;MACzC;IACJ,CAAC,MAAI;MACDI,GAAG,CAACJ,IAAI,CAAC,mBAAmB,CAAC;IACjC;EACJ,CAAC,CAAC;AACN,CAAC,CAAC;AAEFF,GAAG,CAACI,IAAI,CAAC,WAAW,EAAE,CAACC,GAAG,EAAEC,GAAG,KAAK;EAChCP,SAAS,CAACc,MAAM,CAACR,GAAG,CAACI,IAAI,CAAC,CACzBE,IAAI,CAACG,KAAK,IAAIR,GAAG,CAACJ,IAAI,CAACY,KAAK,CAAC,CAAC,CAC9BC,KAAK,CAACC,GAAG,IAAIV,GAAG,CAACJ,IAAI,CAACc,GAAG,CAAC,CAAC;AAChC,CAAC,CAAC;AAGFhB,GAAG,CAACiB,MAAM,CAAC,IAAI,EAAE,MAAM;EACnBC,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;AACpC,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}